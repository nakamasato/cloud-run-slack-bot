name: go

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run tests
        run: go test -v ./...

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Extract golangci-lint version
        id: golangci-lint-version
        run: |
          VERSION=$(grep 'golangci/golangci-lint@' aqua.yaml | sed -E 's/.*golangci\/golangci-lint@(v[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ steps.golangci-lint-version.outputs.version }}

  build:
    needs:
      - test
      - golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set image tag
        id: set_image_tag
        uses: nakamasato/github-actions/set-image-tag@1.14.2

      - name: Set config
        id: set_config
        run: |
          echo "REPO=${{ github.event_name == 'release' && 'cloud-run-slack-bot' || 'cloud-run-slack-bot-dev' }}" >> "$GITHUB_OUTPUT"

      - name: Extract ko version
        id: ko-version
        run: |
          VERSION=$(grep 'ko-build/ko@' aqua.yaml | sed -E 's/.*ko-build\/ko@(v[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up ko
        uses: ko-build/setup-ko@v0.9
        env:
          KO_DOCKER_REPO: "index.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.set_config.outputs.REPO }}"
        with:
          version: ${{ steps.ko-version.outputs.version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        run: ko build . --tags="${{ steps.set_image_tag.outputs.tag }},latest" --bare
