name: go

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run tests
        run: go test -v ./...

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          version: v1.57

  build:
    needs:
      - test
      - golangci-lint
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up ko
        uses: ko-build/setup-ko@v0.6
        env:
          KO_DOCKER_REPO: "index.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/cloud-run-slack-bot"
        with:
          version: v0.15.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image tag
        id: set_tag
        run: |
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            TAGS="pr-${{ github.event.number }}"
          elif [ "$GITHUB_EVENT_NAME" == "push" ]; then
            TAGS="$GITHUB_SHA"
          elif [ "$GITHUB_EVENT_NAME" == "release" ]; then
            TAGS="$GITHUB_REF_NAME"
          fi
          echo "TAGS=$TAGS" >> "$GITHUB_OUTPUT"

      - name: Build
        run: |
          ko build . --tags="${{ steps.set_tag.outputs.TAGS }}" --bare
